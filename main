getgenv().enabled = true

function getShark()
	return game:GetService("Workspace").Sharks:GetChildren()[1]
end

local gunRemote
for i,v in pairs(getgc()) do
	if type(v) == 'function' and islclosure(v) and not(is_synapse_function(v)) then
		if getinfo(v).name == 'reportHit' and getinfo(v).source:match("Turret") == nil then
			gunRemote = getupvalue(v, 2)
			break
		end
	end
end

local shark = getShark()
local tool =  game.Players.LocalPlayer.Backpack:FindFirstChildWhichIsA("Tool") or  game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Tool")

local old
old = hookmetamethod(game, '__namecall', function(self, ...)
	if self.Name == 'ToggleSpectator' then
		return
	end
	return old(self, ...)
end)

while task.wait() and enabled do
	while game.Players.LocalPlayer.Character == nil or game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") == nil or game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") == nil do
		task.wait()
	end
	if shark and tool then
		if tool.Parent ~=  game.Players.LocalPlayer.Character and tool.Parent ~= nil then
			tool.Parent =  game.Players.LocalPlayer.Character
		end
		game.Players.LocalPlayer.Character.Humanoid.Sit = false
		if shark:FindFirstChild("SharkMain") then
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = shark.SharkMain.Engine.CFrame * CFrame.new(0, 0, 0)
			local belowPlayer =  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 0)
			game:GetService("ReplicatedStorage").Projectiles.Events.Weapons.HitScanFire:FireServer(belowPlayer.p)
			gunRemote:FireServer(shark)
			game:GetService("ReplicatedStorage").Projectiles.Events.Weapons.HitScanEnded:FireServer()
		else
			shark = nil
		end
	else
		repeat 
			task.wait()
			shark = getShark()
			tool =  game.Players.LocalPlayer.Backpack:FindFirstChildWhichIsA("Tool")            
		until shark ~= nil and tool ~= nil
	end
end
